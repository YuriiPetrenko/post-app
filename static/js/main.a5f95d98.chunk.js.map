{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","filter","onFilterSelect","map","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","obj","key","isEmpty","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","length","indexOf","visiblePosts","filteredPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5f95d98.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n         return (\r\n                  <div className=\"app-header d-flex\">\r\n                           <h1>Yurii Petrenko</h1>\r\n                           <h2>{allPosts} posts, liked: {liked}</h2>\r\n                  </div>\r\n         )\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n         constructor(props){\r\n                  super(props);\r\n                  this.state = {\r\n                           term: ''\r\n                  }\r\n                  this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n         }\r\n\r\n         onUpdateSearch(e){\r\n                  const term = e.target.value;\r\n                  this.setState({term});\r\n                  this.props.onUpdateSearch(term);\r\n         }\r\n\r\n         render(){\r\n                  return (\r\n                           <input\r\n                                    className=\"form-control search-input\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Post searching\"\r\n                                    onChange={this.onUpdateSearch}\r\n                           />\r\n                  )\r\n         }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './post-status-filter.css'\r\n\r\nexport default class PostStatusFilter extends Component{\r\n         constructor(props){\r\n                  super(props);\r\n                  this.buttons = [\r\n                           {name: 'all', label: 'all'},\r\n                           {name: 'like', label: 'Liked posts'}\r\n                  ]\r\n         }\r\n         render()\r\n         {\r\n                  const {filter, onFilterSelect} = this.props;\r\n                  const buttons = this.buttons.map(({name, label})=>{\r\n                           const active = filter === name;\r\n                           const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n                           return (\r\n                                    <button \r\n                                             key={name} \r\n                                             type=\"button\" \r\n                                             className={`btn ${clazz}`}\r\n                                             onClick={()=> onFilterSelect(name)}>{label}</button>\r\n                           )\r\n                  })\r\n\r\n                  return (\r\n                           <div className=\"btn-group\">\r\n                                    {buttons}\r\n                           </div>\r\n                  )\r\n         }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component{\r\n         render(){\r\n                  const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n                  let classNames = \"app-list-item d-flex justify-content-between\";\r\n                  \r\n                  if(important){\r\n                           classNames+=' important';\r\n                  }\r\n                  \r\n                  if(like){\r\n                           classNames+=' like'\r\n                  }\r\n\r\n                  return(\r\n                           <div className={classNames}>\r\n                                    <span \r\n                                    className=\"app-list-item-label\"\r\n                                    onClick = {onToggleLiked}\r\n                                    >\r\n                                             {label}\r\n                                    </span>\r\n                                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                                    <button \r\n                                    className=\"btn-star btn-sm\"\r\n                                    onClick={onToggleImportant}>\r\n                                             <i className=\"fa fa-star\"></i>\r\n                                    </button>\r\n                                    <button \r\n                                    className=\"btn-trash btn-sm\"\r\n                                    onClick={onDelete}\r\n                                    >\r\n                                             <i className=\"fa fa-trash-o\"></i>\r\n                                    </button>\r\n                                             <i className=\"fa fa-heart\"></i>\r\n                                    </div>\r\n                           </div>\r\n                  )\r\n         }\r\n}","import React from 'react';\r\nimport PostListItem from '../post-list-item/post-list-item';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n         const elements = posts.map((item) => {\r\n            if(typeof (item) === 'object' && isEmpty(item)){\r\n                  const {id, ...itemProps} = item;\r\n                  return (\r\n                        <li key={id} className='list-group-item'>\r\n                        <PostListItem \r\n                              {...itemProps}\r\n                              onDelete={() => onDelete(id)}\r\n                              onToggleImportant={() => onToggleImportant(id)}\r\n                              onToggleLiked={() => onToggleLiked(id)}\r\n                        />\r\n                        </li>\r\n                  )\r\n            }\r\n         });\r\n\r\n         function isEmpty(obj){\r\n            for (let key in obj){\r\n                  return true;\r\n            }\r\n            return false;\r\n         }\r\n\r\n         return(\r\n                  <ul className=\"app-list list-group\">\r\n                           {elements}\r\n                  </ul>\r\n         )\r\n}\r\n\r\nexport default PostList;","import React, {Component} from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n         constructor(props){\r\n                  super(props);\r\n                  this.state = {\r\n                           text: ''\r\n                  }\r\n                  this.onValueChange = this.onValueChange.bind(this);\r\n                  this.onSubmit = this.onSubmit.bind(this);\r\n         }\r\n\r\n         onValueChange(e){\r\n                  this.setState({\r\n                           text: e.target.value\r\n                  })\r\n         }\r\n\r\n         onSubmit(e){\r\n                  e.preventDefault();\r\n                  this.props.onAdd(this.state.text)\r\n                  this.setState({\r\n                           text: ''\r\n                  })\r\n         }\r\n\r\n         render() {\r\n                  return (\r\n                           <form \r\n                           className=\"bottom-panel d-flex\"\r\n                           onSubmit={this.onSubmit}\r\n                           >\r\n                                    <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Write something\"\r\n                                    className=\"form-control new-post-label\"\r\n                                    onChange={this.onValueChange}\r\n                                    value={this.state.text}\r\n                                    />\r\n                                    <button \r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-outline-socondary\"\r\n                                    >\r\n                                    Add</button>\r\n                           </form>\r\n                  )\r\n         }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header/app-header'\r\nimport SearchPanel from '../search-panel/search-panel'\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter'\r\nimport PostList from '../post-list/post-list'\r\nimport PostAddForm from '../post-add-form/post-add-form'\r\n\r\nimport './app.css'\r\n\r\nexport default class App extends Component{\r\n         constructor(props){\r\n          super(props);\r\n          this.state = {\r\n            data: [\r\n              {label: \"Learn React\", important: true, like: false, id: 1},\r\n              {label: \"Second\", important: false, like: false, id: 2},\r\n              {label: \"three\", important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n          }\r\n          this.deleteItem = this.deleteItem.bind(this); \r\n          this.addItem = this.addItem.bind(this);\r\n          this.onToggleImportant = this.onToggleImportant.bind(this);\r\n          this.onToggleLiked = this.onToggleLiked.bind(this);\r\n          this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n          this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n          this.maxId=4;\r\n         }\r\n\r\n         deleteItem(id){\r\n          this.setState(({data})=>{\r\n            const index = data.findIndex(elem => elem.id === id)\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index+1);\r\n\r\n            const newArr = [...before, ...after];\r\n            //const newArr = [data.slice(0, index), data.slice(index+1)];\r\n\r\n            return{\r\n              data: newArr\r\n            }\r\n\r\n          });\r\n         }\r\n\r\n         addItem(body){\r\n          const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n          }\r\n          this.setState(({data})=>{\r\n            const newArr = [...data, newItem]\r\n            return{\r\n                    data: newArr\r\n            }\r\n          })\r\n         }\r\n\r\n         onToggleImportant(id){\r\n          this.setState(({data})=>{\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important}\r\n\r\n            const newArr = [...data.slice(0, index), newItem ,...data.slice(index+1)];\r\n\r\n            return{\r\n              data: newArr\r\n            }\r\n          })\r\n         }\r\n\r\n         onToggleLiked(id){\r\n          this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n          }); \r\n         }\r\n\r\n         searchPost(items, term){\r\n            if(term.length === 0){\r\n              return items;\r\n            }\r\n\r\n            return items.filter((item)=>{\r\n              return item.label.indexOf(term) > -1\r\n            })\r\n         }\r\n\r\n         onUpdateSearch(term){\r\n          this.setState({term})\r\n         }\r\n\r\n         filteredPost(items, filter){\r\n          if(filter === 'like'){\r\n            return items.filter(item => item.like)\r\n          }else{\r\n            return items\r\n          }\r\n         }\r\n\r\n         onFilterSelect(filter){\r\n          this.setState({filter});\r\n         }\r\n\r\n         render(){\r\n            const {data, term, filter} = this.state;\r\n            const liked = data.filter(item => item.like).length;\r\n            const allPosts = data.length;\r\n\r\n            const visiblePosts = this.filteredPost(this.searchPost(data, term), filter)\r\n\r\n            return (\r\n              <div className=\"app\">\r\n                <AppHeader\r\n                  liked={liked}\r\n                  allPosts={allPosts}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                  <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}\r\n                  />\r\n                  <PostStatusFilter\r\n                    filter={filter}\r\n                    onFilterSelect={this.onFilterSelect}\r\n                  />\r\n                </div>\r\n                <PostList \r\n                  posts={visiblePosts}\r\n                  onDelete={this.deleteItem}\r\n                  onToggleImportant={this.onToggleImportant}\r\n                  onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <PostAddForm\r\n                  onAdd={this.addItem}\r\n                />\r\n              </div>\r\n            )\r\n         }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}